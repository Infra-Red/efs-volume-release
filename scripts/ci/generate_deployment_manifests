#!/bin/bash

set -e -x -u

source $(pwd)/efs-volume-release/scripts/ci/utils.sh
check_param BOSH_TARGET
check_param BOSH_USERNAME
check_param BOSH_PASSWORD
check_param ENVIRONMENT_NAME
check_param DEPLOYMENTS_DIR
check_param AWS_ACCESS_KEY_ID
check_param AWS_SECRET_ACCESS_KEY
check_param AWS_SUBNET_ID
check_param AWS_SECURITY_GROUP
check_param INFRASTRUCTURE

if [ -z "$ENVIRONMENT_NAME" ]; then
  environment_path="${PWD}/${DEPLOYMENTS_DIR}"
else
  environment_path="${PWD}/${DEPLOYMENTS_DIR}/${ENVIRONMENT_NAME}"
fi

stubs_path="${environment_path}/stubs"
templates_path="${environment_path}/templates"
efsvolume_stubs="${PWD}/${DEPLOYMENTS_DIR}/efs-volume/stubs"

mkdir -p generated-manifest-efs

pushd cf-release
  ./scripts/generate_deployment_manifest \
    ${INFRASTRUCTURE} \
    ${stubs_path}/cf/*.yml \
    > ../generated-manifest-efs/cf-deployment.yml
popd

pushd efs-volume-release

cat > ${PWD}/efsbroker-creds.yml << EOF
---
properties:
  efsbroker:
    username: ${BOSH_USERNAME}
    password: ${BOSH_PASSWORD}
    aws-access-key-id: ${AWS_ACCESS_KEY_ID}
    aws-secret-access-key: ${AWS_SECRET_ACCESS_KEY}
    aws-subnet-ids: ${AWS_SUBNET_ID}
    aws-security-group: ${AWS_SECURITY_GROUP}
EOF

  ./scripts/generate_manifest.sh \
    ../generated-manifest-efs/cf-deployment.yml \
    ${efsvolume_stubs}/director-uuid.yml \
    ${PWD}/efsbroker-creds.yml \
    templates/stubs/iaas-settings.yml

  mv efsvolume-aws-manifest.yml ../generated-manifest-efs/efsvolume-manifest.yml
popd

